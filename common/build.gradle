plugins {
	id 'java'
	id 'com.github.johnrengelman.shadow' version '8.+'
}

group = maven_group
base.archivesName = project.archives_base_name

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

repositories {
	maven {
		url "https://moehreag.duckdns.org/maven/snapshots"
	}
	maven {
		url "https://moehreag.duckdns.org/maven/releases"
	}

	maven {
		name 'TerraformersMC Maven'
		url 'https://maven.terraformersmc.com/releases/'
	}

	mavenLocal()
	mavenCentral()
}

dependencies {
	implementation 'org.jetbrains:annotations:24.0.0'

	// take the oldest version just to build against
	compileOnly("io.github.axolotlclient:AxolotlClient-config:${project.config}+${project.minecraft_18}")
	compileOnly("io.github.axolotlclient.AxolotlClient-config:AxolotlClientConfig-common:${project.config}")

	compileOnly("com.google.guava:guava:17.0")
	compileOnly("org.apache.httpcomponents:httpclient:4.3.3")
	compileOnly("com.google.code.gson:gson:2.2.4")
	compileOnly("commons-io:commons-io:2.4")
	compileOnly("org.apache.commons:commons-lang3:3.3.2")

	shadow implementation("io.github.CDAGaming:DiscordIPC:0.6.5")
	shadow implementation("com.kohlschutter.junixsocket:junixsocket-core:2.6.2")

	shadow implementation("io.netty:netty-all:4.1.96.Final")
}

build {
	dependsOn(shadowJar)
	tasks.jar.enabled = false
}

processResources {
	inputs.property 'version', version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

tasks.withType(AbstractArchiveTask).configureEach {
	preserveFileTimestamps = false
	reproducibleFileOrder = true
}

shadowJar {
	archiveClassifier.set('')
	minimize()

	relocate 'io.netty', 'io.github.axolotlclient.shadow.netty'
	relocate 'com.jagrosh', 'io.github.axolotlclient.shadow.jagrosh'

	exclude 'META-INF/versions/**'
	exclude 'META-INF/maven/**'

	append '../LICENSE'
	mergeServiceFiles()
}

publishing {
	publications {
		shadow(MavenPublication) { publication ->
			project.shadow.component(publication)
		}
	}
	repositories {
		maven {
			name = "owlMaven"
			def repository = project.version.toString().contains("beta") || project.version.toString().contains("alpha") ? "snapshots" : "releases"
			url = "https://moehreag.duckdns.org/maven/" + repository
			credentials(PasswordCredentials)
			authentication {
				basic(BasicAuthentication)
			}
		}
	}
}

tasks.modrinth.setEnabled(false)
